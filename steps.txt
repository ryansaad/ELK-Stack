## Setup and Installation Guide
### Prerequisites

* An **AWS account** to provision two EC2 instances.
* **SSH** access to both VMs.
* A Security Group configured to allow inbound traffic on ports:
    * **22** (SSH) from your IP.
    * **5044** (Beats input for Logstash).
    * **9200** (Elasticsearch API).
    * **5601** (Kibana UI).
    * **8080** (Application port).

* **Java (OpenJDK 17)** installed on the ELK stack server (a prerequisite for Elasticsearch and Logstash).



Server 1: ELK Stack Server (Example IP: ip-10-0-2-90, Public IP: 18.218.234.146)
System Preparation:

Update & Upgrade OS: sudo apt update && sudo apt upgrade -y
Install Java: sudo apt install default-jdk -y

Elasticsearch Installation & Configuration:

1.Import GPG Key: wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg

2.Add APT Repository: echo "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | sudo tee /etc/apt/sources.list.d/elastic-8.x.list

3.Update APT Cache: sudo apt update

4.Install Elasticsearch: sudo apt install elasticsearch -y

5. Configure /etc/elasticsearch/elasticsearch.yml:
-----------------------------------------------

network.host: 0.0.0.0

cluster.name: my_cluster

node.name: node-1

discovery.type: single-node

bootstrap.memory_lock: true
--------------------------------------------------

****Important: Comment out the auto-generated cluster.initial_master_nodes: line at the bottom of the file (e.g., # cluster.initial_master_nodes: ["ip-10-0-2-90"]).

Service Management:
-----------------------

sudo systemctl daemon-reload

sudo systemctl start elasticsearch

sudo systemctl enable elasticsearch

Security Setup:

Reset elastic user password: sudo /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic (Store this password securely).

Test connectivity: curl --insecure -u elastic https://localhost:9200 (Enter password when prompted).


*************************************************
Logstash Installation & Configuration:
***************************************************
Install Logstash: sudo apt install logstash -y

Configure /etc/logstash/conf.d/logstash.conf:

Code snippet

input {
  beats {
    port => 5044
  }
}

filter {
  grok {
    match => { "message" => "%{TIMESTAMP_ISO8601:log_timestamp}%{LOGLEVEL:log_level}%{GREEDYDATA:log_message}" }
  }
  date {
    match => [ "log_timestamp", "ISO8601" ]
    target => "@timestamp"
    remove_field => ["log_timestamp"]
  }
}

output {
  elasticsearch {
    hosts => ["https://localhost:9200"]
    index => "logs-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "<YOUR_ELASTIC_PASSWORD>" # Use the password generated for 'elastic'
    ssl_certificate_verification => false
  }
  stdout {
    codec => rubydebug
  }
}


Service Management:
------------------------------
Test configuration: sudo -u logstash /usr/share/logstash/bin/logstash --path.settings /etc/logstash -t -f /etc/logstash/conf.d/logstash.conf

Start service: sudo systemctl start logstash

Enable on boot: sudo systemctl enable logstash


**************************************************
Kibana Installation & Configuration:
**************************************************
Install Kibana: sudo apt install kibana -y

1. Configure /etc/kibana/kibana.yml:

server.host: "0.0.0.0"
elasticsearch.hosts: ["https://localhost:9200"]

*****Important: Kibana uses a kibana_system user for internal operations.

2. Reset kibana_system password: sudo /usr/share/elasticsearch/bin/elasticsearch-reset-password -u kibana_system (Store this password).

Add to kibana.yml:
------------------------------------------
elasticsearch.username: "kibana_system"
elasticsearch.password: "<YOUR_KIBANA_SYSTEM_PASSWORD>"
elasticsearch.ssl.verificationMode: none

Service Management:
--------------------------
sudo systemctl daemon-reload
sudo systemctl start kibana
sudo systemctl enable kibana


------------------------------------------------------------
**********************************************************

Server 2: Application Server (Example IP: ip-10-0-2-63)
Filebeat Installation:


sudo apt install filebeat -y
Manual User/Directory Creation (if apt fails to create them):
sudo groupadd --system filebeat
sudo useradd --system -g filebeat -s /sbin/nologin -d /var/lib/filebeat filebeat
sudo mkdir -p /var/lib/filebeat /var/log/filebeat
sudo chown -R filebeat:filebeat /var/lib/filebeat /var/log/filebeat
sudo chmod -R o+r /etc/filebeat

Filebeat Configuration (/etc/filebeat/filebeat.yml):

YAML

# ============================== Filebeat inputs ===============================
filebeat.inputs:
- type: filestream
  id: system-and-app-logs
  enabled: true
  paths:
    - /var/log/*.log
    - /var/log/syslog
    - /home/ubuntu/Boardgame/target/app.log # Your specific application log file

# ==================================== Paths ===================================
path.data: /var/lib/filebeat
path.logs: /var/log/filebeat

# ================================== Outputs ===================================
output.logstash:
  hosts: ["<ELK_SERVER_PUBLIC_IP>:5044"] # e.g., "18.218.234.146:5044"

# ... (other sections like processors, logging can remain default or customized)



Filebeat Service Management:

---------------------------------------------------------
Test configuration: sudo -u filebeat /usr/share/filebeat/bin/filebeat test config -c /etc/filebeat/filebeat.yml
Start service: sudo systemctl start filebeat
Enable on boot: sudo systemctl enable filebeat
Verify status: sudo systemctl status filebeat
Test output connection: sudo filebeat test output

Network Access (Application Server):
---------------------------------------
AWS Security Group (for Application server's Public IP):

(Ensure Port 22 for SSH is open).

(Outbound rules typically allow all, but ensure outbound TCP to ELK server's Port 5044 is permitted).

****************************************
Overall Project Validation:
*****************************************
Access Kibana UI: http://<ELK_SERVER_PUBLIC_IP_ADDRESS>:5601

Log in with elastic username and password.

Navigate to the "Discover" tab and create logs-* index pattern.

Confirm logs from the Application Server are flowing into Kibana.
